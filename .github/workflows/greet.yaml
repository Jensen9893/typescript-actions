name: Greet User
on: 
  pull_request:
    branches: ['**']
    types: [opened,closed]
jobs:

  validate:
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'main' && github.event.action != 'closed' || (github.event.action == 'closed' && github.event.pull_request.merged == true && contains(fromJSON('["main", "dev", "test"]'), github.event.pull_request.base.ref))
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install
      - run: npm run build
      - name: Validate App
        uses: ./validate-action/
        id: validate
  
  greet:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true && contains(fromJSON('["main", "dev", "test"]'), github.event.pull_request.base.ref)
    needs: validate
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install
      - run: npm run lint
      - run: npm run test
      - run: npm run build
      - name: Verify Build Output
        run: ls -R dist/
      - uses: ./
        with:
          name: 'Dat Nguyen'
        id: greet
      - name: Process Greeting
        run: node dist/scripts/process-greeting.js
        env:
          GREETING: ${{ steps.greet.outputs.greeting }}

  build-docker:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true && contains(fromJSON('["main", "dev", "test"]'), github.event.pull_request.base.ref)
    # This job will only run if the pull request is closed and the base branch is one of the specified branches
    needs: validate  # Ensure this job runs after the greet job
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install
      - run: npm run build
      - name: Build Docker Image
        uses: ./dockerfile-action
        with:
          image-name: 'my-greeting-app'
          tag: 'latest'
          push: 'false'  # Set to 'true' for pushing

  deploy-demo:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true && contains(fromJSON('["main", "dev", "test"]'), github.event.pull_request.base.ref)
    needs: [greet, build-docker]
    steps:
      - name: Simulate Docker Image Deployment
        run: |
          echo "Starting deployment of my-greeting-app:latest..."
          echo "Connecting to fictional Kubernetes cluster..."
          echo "Deploying my-greeting-app:latest to namespace 'demo'..."
          echo "Verifying deployment status..."
          echo "Deployment successful! my-greeting-app:latest is now running."

  return-greeting:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true && contains(fromJSON('["main", "dev", "test"]'), github.event.pull_request.base.ref)
    needs: [deploy-demo]  # Ensure this job runs after the greet job
    steps:
      - uses: actions/checkout@v3
      - name: Return Greeting
        run: echo "Pipeline run successfully!"